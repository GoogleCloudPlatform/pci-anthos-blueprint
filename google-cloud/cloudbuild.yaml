# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

timeout: 3600s
logsBucket: "gs://${_ADMIN_BUCKET}/logs/cloudbuild"
steps:
# Enable these two steps, and the "images:" step at the end when editing the Dockerfile, so it will be built, pushed, and used.
- name: 'gcr.io/cloud-builders/docker:18.09.0'
  dir: google-cloud
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      docker pull gcr.io/${PROJECT_ID}/asm-installer:latest || exit 0
- name: 'gcr.io/cloud-builders/docker:18.09.0'
  dir: google-cloud
  args: ['build', '-t', 'gcr.io/${PROJECT_ID}/asm-installer:latest', '--cache-from', 'gcr.io/${PROJECT_ID}/asm-installer:latest', '.']
- name: gcr.io/${PROJECT_ID}/asm-installer:latest
  id: "terraform-infrastructure"
  dir: google-cloud/infrastructure
  entrypoint: "bash"
  env:
  - TF_VAR_project_prefix=${_PROJECT_PREFIX}
  - TF_VAR_organization_id=${_ORGANIZATION_ID}
  - TF_VAR_region=${_REGION}
  - TF_VAR_billing_account=${_BILLING_ACCOUNT}
  - TF_VAR_frontend_hostname=${_FRONTEND_HOSTNAME}
  - TF_VAR_frontend_zone_dns_name=${_FRONTEND_ZONE_DNS_NAME}
  - TF_VAR_acm_syncrepo=${_ACM_SYNCREPO}
  - TF_VAR_acm_syncbranch=${_ACM_SYNCBRANCH}
  - TF_VAR_infrastructure_folder_id=${_INFRASTRUCTURE_FOLDER_ID}
  - ADMIN_BUCKET=${_ADMIN_BUCKET}
  - ADMIN_PROJECT_ID=${PROJECT_ID}
  - SRC_PATH=${_SRC_PATH}
  args:
    - "-xe"
    - "-c"
    - |
      envsubst < backend.tf.tmpl > backend.tf
      terraform init
      terraform plan -out terraform.tfplan
      terraform apply -input=false terraform.tfplan
- name: gcr.io/${PROJECT_ID}/asm-installer:latest
  id: "install-asm"
  dir: google-cloud
  entrypoint: "bash"
  env:
  - IN_SCOPE_CLUSTER_NAME=${_IN_SCOPE_CLUSTER}
  - OUT_OF_SCOPE_CLUSTER_NAME=${_OUT_OF_SCOPE_CLUSTER}
  - IN_SCOPE_CLUSTER_CTX=${_IN_SCOPE_CLUSTER}
  - OUT_OF_SCOPE_CLUSTER_CTX=${_OUT_OF_SCOPE_CLUSTER}
  - CLUSTER_LOCATION=${_REGION}
  - SRC_PATH=${_SRC_PATH}
  - ASM_PATH=/opt/istio-1.6.4-asm.9
  args:
    - "-xe"
    - "-c"
    - |
      source ./scripts/main.sh
      install_asm
- name: gcr.io/${PROJECT_ID}/asm-installer:latest
  id: "install-application"
  entrypoint: "bash"
  dir: google-cloud
  env:
  - IN_SCOPE_CLUSTER_NAME=${_IN_SCOPE_CLUSTER}
  - OUT_OF_SCOPE_CLUSTER_NAME=${_OUT_OF_SCOPE_CLUSTER}
  - IN_SCOPE_CLUSTER_CTX=${_IN_SCOPE_CLUSTER}
  - OUT_OF_SCOPE_CLUSTER_CTX=${_OUT_OF_SCOPE_CLUSTER}
  - CLUSTER_LOCATION=${_REGION}
  - SRC_PATH=${_SRC_PATH}
  - APP_DIR=/workspace/google-cloud/app/store
  - DOMAIN_NAME=${_FRONTEND_HOSTNAME}.${_FRONTEND_ZONE_DNS_NAME}
  args:
    - "-xe"
    - "-c"
    - |
      source ./scripts/main.sh
      install_application
images: ['gcr.io/${PROJECT_ID}/asm-installer:latest']
